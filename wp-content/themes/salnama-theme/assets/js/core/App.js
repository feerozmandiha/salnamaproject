import { Header } from '../modules/Header.js';
// import { gsapManager } from './GSAPManager.js'; // ÿß€åŸÜ ÿÆÿ∑ ÿ±ÿß ⁄©ÿßŸÖŸÜÿ™ ⁄©ŸÜ€åÿØ
import { ModalManager } from '../modules/ModalManager.js';

/**
 * Main application initializer for the Salnama Theme.
 * Initializes all modular JavaScript components.
 */
class SalnamaApp {
    constructor() {
        console.log('üöÄ SalnamaApp constructor called');
        this.modalManager = null;
        this.init();
    }

    init() {
        console.log('üöÄ SalnamaApp init started');

        // ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿßŸàŸÑ€åŸá ŸÖÿß⁄òŸàŸÑ ŸáÿØÿ±
        new Header();

        // ÿßÿ∑ŸÖ€åŸÜÿßŸÜ ÿßÿ≤ Ÿàÿ¨ŸàÿØ GSAP ŸÇÿ®ŸÑ ÿßÿ≤ ÿßÿØÿßŸÖŸá ⁄©ÿßÿ±
        if (typeof gsap === 'undefined') {
            console.warn("GSAP library not found. Skipping advanced animations.");
            this.initBasicComponents();
        } else {
            this.initWithGSAP();
        }

        // ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿßŸàŸÑ€åŸá ÿ≥€åÿ≥ÿ™ŸÖ ŸÖŸàÿØÿßŸÑ
        this.initModalSystem();
        
        console.log('‚úÖ SalnamaApp fully initialized');
    }

    /**
     * ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿßŸàŸÑ€åŸá ⁄©ÿßŸÖŸæŸàŸÜŸÜÿ™‚ÄåŸáÿß ÿ®ÿØŸàŸÜ GSAP
     */
    initBasicComponents() {
        // ⁄©ÿßŸÖŸæŸàŸÜŸÜÿ™‚ÄåŸáÿß€å Ÿæÿß€åŸá ÿ®ÿØŸàŸÜ ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß€å Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá
        this.setupGlobalEventListeners();
    }

    /**
     * ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿßŸàŸÑ€åŸá ⁄©ÿßŸÖŸÑ ÿ®ÿß Ÿæÿ¥ÿ™€åÿ®ÿßŸÜ€å GSAP
     */
    initWithGSAP() {
        this.setupGlobalEventListeners();
        this.initAnimations();
    }

    /**
     * ÿ±ÿßŸá‚ÄåÿßŸÜÿØÿßÿ≤€å ÿ≥€åÿ≥ÿ™ŸÖ ŸÖŸàÿØÿßŸÑ
     */
    initModalSystem() {
        // ÿß€åÿ¨ÿßÿØ ModalManager
        this.modalManager = new ModalManager();
        
        // ÿ´ÿ®ÿ™ ÿ®ÿ±ÿß€å ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ¨ŸáÿßŸÜ€å
        window.salmamaModalManager = this.modalManager;
        
        console.log('‚úÖ Modal system initialized');
    }

    setupGlobalEventListeners() {
        // ŸÖÿØ€åÿ±€åÿ™ ⁄©ŸÑ€å⁄© ÿ±Ÿà€å triggerŸáÿß€å ŸÖŸàÿØÿßŸÑ
        document.addEventListener('click', (e) => {
            const trigger = e.target.closest('[data-modal-trigger]');
            if (trigger) {
                e.preventDefault();
                const modalId = trigger.dataset.modalTrigger;
                console.log(`üü¢ Modal trigger clicked: ${modalId}`);
                
                if (this.modalManager) {
                    this.modalManager.openModal(modalId);
                } else {
                    console.error('‚ùå ModalManager not initialized');
                }
            }
        });

        // ÿ±ŸÅÿ±ÿ¥ ScrollTrigger ŸáŸÜ⁄ØÿßŸÖ ŸÑŸàÿØ ⁄©ÿßŸÖŸÑ ÿµŸÅÿ≠Ÿá
        window.addEventListener('load', () => {
            if (typeof gsap !== 'undefined' && typeof ScrollTrigger !== 'undefined') {
                // gsapManager.refreshScrollTriggers(); // ÿß€åŸÜ ÿÆÿ∑ ÿ±ÿß ⁄©ÿßŸÖŸÜÿ™ ⁄©ŸÜ€åÿØ
                ScrollTrigger.refresh(); // ÿßÿ≥ÿ™ŸÅÿßÿØŸá ŸÖÿ≥ÿ™ŸÇ€åŸÖ ÿßÿ≤ ScrollTrigger
            }
        });

        // ŸÖÿØ€åÿ±€åÿ™ ÿ±€åÿ≤ŸæŸàŸÜÿ≥€åŸà Ÿà ÿ™ÿ∫€å€åÿ± ÿ≥ÿß€åÿ≤
        window.addEventListener('resize', () => {
            if (typeof gsap !== 'undefined' && typeof ScrollTrigger !== 'undefined') {
                setTimeout(() => ScrollTrigger.refresh(), 300); // ÿßÿ≥ÿ™ŸÅÿßÿØŸá ŸÖÿ≥ÿ™ŸÇ€åŸÖ
            }
        });

        console.log('‚úÖ Global event listeners setup');
    }

    initAnimations() {
        // ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß€å ÿπŸÖŸàŸÖ€å ÿµŸÅÿ≠Ÿá ÿ®ÿß GSAP
        this.initScrollAnimations();
        this.initPageTransitions();
    }

    initScrollAnimations() {
        // ÿß⁄Øÿ± GSAPManager Ÿàÿ¨ŸàÿØ ŸÜÿØÿßÿ±ÿØÿå ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß ÿ±ÿß ÿ∫€åÿ±ŸÅÿπÿßŸÑ ⁄©ŸÜ
        if (typeof gsap === 'undefined' || typeof ScrollTrigger === 'undefined') {
            console.log('‚è∏Ô∏è GSAP not available, skipping animations');
            return;
        }

        // ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß€å ÿßÿ≥⁄©ÿ±ŸàŸÑ ÿ®ÿß GSAP - ŸÅŸÇÿ∑ ÿß⁄Øÿ± ÿßŸÑŸÖŸÜÿ™‚ÄåŸáÿß Ÿàÿ¨ŸàÿØ ÿØÿßÿ±ŸÜÿØ
        const header = document.querySelector('header');
        if (header) {
            // ÿßÿ≥ÿ™ŸÅÿßÿØŸá ŸÖÿ≥ÿ™ŸÇ€åŸÖ ÿßÿ≤ ScrollTrigger
            ScrollTrigger.create({
                trigger: header,
                start: 'top top',
                end: 'bottom top',
                toggleClass: { targets: header, className: 'scrolled' },
                markers: false
            });
        }

        // ÿßŸÜ€åŸÖ€åÿ¥ŸÜ ÿ®ÿ±ÿß€å ÿπŸÜÿßÿµÿ± ÿ®ÿß ⁄©ŸÑÿßÿ≥ animate-on-scroll
        const animateElements = document.querySelectorAll('.animate-on-scroll');
        if (animateElements.length > 0) {
            ScrollTrigger.create({
                trigger: animateElements,
                start: 'top 80%',
                end: 'bottom 20%',
                onEnter: () => {
                    gsap.to(animateElements, {
                        y: 0,
                        opacity: 1,
                        duration: 0.8,
                        stagger: 0.1,
                        ease: 'power2.out'
                    });
                }
            });
        }
    }

    initPageTransitions() {
        // ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß€å ÿßŸÜÿ™ŸÇÿßŸÑ ÿ®€åŸÜ ÿµŸÅÿ≠ÿßÿ™
        if (typeof gsap === 'undefined') return;

        const mainContent = document.querySelector('main');
        if (mainContent) {
            gsap.fromTo(mainContent, 
                { opacity: 0, y: 20 },
                { opacity: 1, y: 0, duration: 0.6, ease: 'power2.out' }
            );
        }
    }

    /**
     * ŸÖÿ™ÿØŸáÿß€å ÿπŸÖŸàŸÖ€å ÿ®ÿ±ÿß€å ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿßÿ≤ ÿÆÿßÿ±ÿ¨ ⁄©ŸÑÿßÿ≥
     */
    getModalManager() {
        return this.modalManager;
    }
}

// ÿ±ÿßŸá‚ÄåÿßŸÜÿØÿßÿ≤€å ÿ®ÿ±ŸÜÿßŸÖŸá
console.log('üìú App.js loaded');

document.addEventListener('DOMContentLoaded', () => {
    console.log('üè† DOM Content Loaded - Initializing SalnamaApp');
    
    // ÿß€åÿ¨ÿßÿØ instanceÂÖ®Â±Ä ÿßÿ≤ ⁄©ŸÑÿßÿ≥ ÿßÿµŸÑ€å
    window.salmamaApp = new SalnamaApp();
    
    // ŸÖÿ™ÿØŸáÿß€å global ÿ®ÿ±ÿß€å ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ¢ÿ≥ÿßŸÜ
    window.openModal = (modalId) => {
        if (window.salmamaApp && window.salmamaApp.getModalManager()) {
            window.salmamaApp.getModalManager().openModal(modalId);
        } else {
            console.error('‚ùå SalnamaApp or ModalManager not available');
        }
    };
    
    window.closeModal = (modalId) => {
        if (window.salmamaApp && window.salmamaApp.getModalManager()) {
            window.salmamaApp.getModalManager().closeModal(modalId);
        } else {
            console.error('‚ùå SalnamaApp or ModalManager not available');
        }
    };

    window.closeAllModals = () => {
        if (window.salmamaApp && window.salmamaApp.getModalManager()) {
            window.salmamaApp.getModalManager().closeAllModals();
        } else {
            console.error('‚ùå SalnamaApp or ModalManager not available');
        }
    };

    console.log('‚úÖ Global modal functions registered');
    console.log('üí° Test commands:');
    console.log('   - openModal("consultation")');
    console.log('   - closeModal("consultation")');
    console.log('   - closeAllModals()');
});